---

#- name: wait for zookeeper to listen
#  command: "/usr/local/bin/zookeeper-wait-for-listen.sh {{ inventory_hostname }}"
#
#- name: create zookeeper acl
#  sudo: yes
#  command: "{{ chronos_zk_acl_cmd }}"
#  notify:
#    - restart chronos
#  when: zk_chronos_user_secret is defined
#  run_once: true
#  tags:
#    - chronos

- name: create chronos conf directory
  sudo: yes
  file:
    dest: /etc/chronos/conf
    state: directory
  tags:
    - chronos

- name: systemd check
  stat: path=/usr/lib/systemd/system/
  register: systemd_check

- name: configure chronos unit file
  sudo: yes
  replace:
    dest: /usr/lib/systemd/system/chronos.service
    regexp: "=network.target"
    replace: '=mesos-master.service'
  when: systemd_check.stat.exists == true
  notify:
    - reload chronos
    - restart chronos
  tags:
    - chronos

- name: configure chronos to wait for zookeeper before starting
  sudo: yes
  lineinfile:
    dest: /usr/lib/systemd/system/chronos.service
    line: "ExecStartPre=/usr/local/bin/zookeeper-wait-for-listen.sh {{ chronos_zk_dns }}"
    insertbefore: "^ExecStart="
    state: present
  when: systemd_check.stat.exists == true
  notify:
    - reload chronos
    - restart chronos
  tags:
    - chronos

# TODO: feels like a hack
- name: fix chronos bin file
  sudo: yes
  replace:
    dest: /usr/bin/chronos
    regexp: '\[\[ -s /etc/mesos/zk \]\]'
    replace: 'false'
  notify:
    - restart chronos
  tags:
    - chronos

- name: set key/value options
  sudo: yes
  when: item.value != ""
  copy:
    dest: /etc/chronos/conf/{{ item.key }}
    content: "{{ item.value }}"
  with_items:
    - key: zk_hosts
      value: "{{ chronos_zk_connect }}"
    - key: master
      value: "{{ chronos_zk_mesos_master }}"
    - key: hostname
      value: "{{ chronos_hostname }}"
    - key: http_port
      value: "{{ chronos_port }}"
    #- key: mem_opts
    #  value: "{{ chronos_env_java_opts }}"
    - key: mesos_framework_name
      value: "chronos"
  notify:
    - restart chronos
  tags:
    - chronos

- name: enable and start chronos
  sudo: yes
  service:
    enabled: yes
    name: chronos
    state: started
  tags:
    - chronos

- meta: flush_handlers
